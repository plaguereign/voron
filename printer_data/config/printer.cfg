#[include mmu/base/*.cfg]
#[include mmu/optional/client_macros.cfg]
# This file contains common pin mappings for the Voron Leviathan V1.1
# To use this config, the firmware should be compiled for the STM32F446 with "No bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON Trident 250/300/350mm Leviathan V1.1 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/ttyAMA0
#canbus_uuid: 0e4d63f66713
#canbus_uuid: 96d0f595e64e
restart_method: command
##--------------------------------------------------------------------
[include nitehawk-sb.cfg]
[include bedfans.cfg]
[include mesh.cfg]
[include macros.cfg]
[include controller_fans.cfg]
[include KAMP_Settings.cfg]
[include leviathansensorless.cfg]
[include timelapse.cfg]
[include BTKS_Macros.cfg]
[include purgebelt.cfg]
[include AFC/*.cfg]
[include blobifier/*.cfg]


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 80 

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 20000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#[auto_speed]
#axis: diag_x, diag_y  # One or multiple of `x`, `y`, `diag_x`, `diag_y`, `z`
#margin: 20            ; How far away from your axes to perform movements

#settling_home: 1      ; Perform settling home before starting Auto Speed
#max_missed: 200.0       ; Maximum full steps that can be missed
#endstop_samples: 3    ; How many endstop samples to take for endstop variance

#accel_min: 1000.0     ; Minimum acceleration test may try
#accel_max: 50000.0    ; Maximum acceleration test may try
#accel_accu: 0.05      ; Keep binary searching until the result is within this percentage

#velocity_min: 50.0    ; Minimum velocity test may try
#velocity_max: 5000.0  ; Maximum velocity test may try
#velocity_accu: 0.05   ; Keep binary searching until the result is within this percentage

#derate: 0.8           ; Derate discovered results by this amount

#validate_margin: Unset      ; Margin for VALIDATE, Defaults to margin
#validate_inner_margin: 20.0 ; Margin for VALIDATE inner pattern
#validate_iterations: 50     ; Perform VALIDATE pattern this many times

#results_dir: ~/printer_data/config ; Destination directory for graphs



[gcode_macro PRINT_START]
gcode: 
  BED_MESH_CLEAR
  SET_GCODE_OFFSET Z=0
  M109 S150
  G28     ; home axes
  G0 Z2   ; position beacon at 2mm for heat soak

  M140 S110     ; start bed heater
  M109 S150       ; preheat nozzle to probing temp
  M190 S110     ; wait on bed temperature
  G4 P60000       ; optional, let temps settle for 1 min
  #AFC_PARK
  WIPE_NOZZLE     ; call another macro to wipe nozzle if available

  G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
  Beacon_QGL                       ; or QGL to balance towers
  BED_MESH_CALIBRATE RUNS=2           ; bed mesh in scan mode

  #WIPE_NOZZLE
  G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only after tilt/mesh

  M104 S260                    ; set extruder to print temp
  M109 S260                    ; wait for extruder temp
  AFC_PARK
  #SET_GCODE_OFFSET Z=0.06     ; add a little offset for hotend thermal expansion
                            ; needs fine tuning, long meltzones require more
  #SET_GCODE_OFFSET Z_ADJUST={OFFSET}  ; apply optional material squish via slicer

  PRIME_NOZZLE    ; call another macro to purge or prime nozzle
  ; start printing 

[gcode_macro START_HEAT_SOAK]
gcode:
    {% set SOAK = params.SOAK|default(15) %}
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    M117 Starting Warmup #if the bed is already at the correct target temp, we assume no heat soak is necessary.
    {% if (SOAK) <= 0 or (printer.heater_bed.target >= (BED_TEMP - 20)) %}
    {% else %}
        M117 Heating for Soak
        M190 S{BED_TEMP}
        M117 Starting Soak 
    {% for timer in range( SOAK,0,-1) %} #we cycle once a minute, so we can send an update to keep octoprint happy, rather than just sleeping for the entire soak
        M117 Soak: {timer|int}m remaining 
        M105
        G4 P60000
    {% endfor %}
    M117 Soak Complete
    {% endif %}

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_15BB830A5157355957202020FF101224-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: -20 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
default_probe_method: proximity
home_method: contact
home_method_when_homed: proximity
home_autocalibrate: unhomed
contact_max_hotend_temperature: 180 # increase to enable hot contacting
# Temperature limit for the hotend when contacting, override this for temps which may damage some surfaces.
#contact_sensitivity: 0
# Adjusts noise tolerance of contact processing. Values 0-3 are valid, with 3 tolerating the most noise.
#contact_latency_min: 0
# Limits how low of a latency contact is allowed to advance.

# new additions for beacon safe_z_home functionality
home_xy_position: 175, 175
# X, Y coordinate for homing z via contact.
home_z_hop: 5
# Distance to retract before x/y homing moves.
home_z_hop_speed: 30
# Retraction speed for z hop.
home_xy_move_speed: 300
# Speed for moving to home_xy_position.
home_y_before_x: False
# If set, the Y axis will home first when using the beacon safe_z_home

# new additions for setting default homing mode
#home_method: contact
# Sets default homing method used by G28. `proximity` requires a valid beacon model to be loaded.
home_method_when_homed: proximity # defaults to `home_method` value
# Sets the homing method when the machine is already in a homed state.
home_autocalibrate: always # |unhomed|never
# Sets the autocalibration behavior. `always` will autocal on every home, `unhomed` on initial homing,
# `never` will never so that models stored in config may be used with proximity homing.
home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
home_gcode_post_x: _HOME_POST_AXIS AXIS=X
home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
home_gcode_post_y: _HOME_POST_AXIS AXIS=Y


[bed_mesh]
zero_reference_position: 175, 175    
#    set this to the middle of your bed
speed: 200
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 35, 35
#    start point of bed mesh [X, Y]
mesh_max: 315, 315
#    end point of bed mesh [X, Y]
probe_count: 30, 30
algorithm: bicubic

#[safe_z_home]
#home_xy_position: 175, 175
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
#z_hop: 3

[gcode_macro Beacon_QGL] # safer and faster QGL for Cartographer
gcode:
    G28 # or use a conditional or safe homing
    QUAD_GANTRY_LEVEL horizontal_move_z=10 retries=0 retry_tolerance=1.000
    QUAD_GANTRY_LEVEL horizontal_move_z=3
    G28 Z

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to HV STEPPER 0
##  Endstop connected to X-ENDSTOP
[stepper_x]
step_pin: PB10
dir_pin: !PB11
enable_pin: !PG0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
#endstop_pin: nhk:gpio13 #PC1 
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: -10
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 80   #Max 100
homing_retract_dist: 10
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_x]
cs_pin: PE15
spi_bus: spi4
diag0_pin: ^!PG1
interpolate: false
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive
run_current: 1.8
home_current: 0.5
sense_resistor: 0.075
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to HV STEPPER 1
##  Endstop connected to Y-ENDSTOP
[stepper_y]
step_pin: PF15
dir_pin: !PF14
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
#endstop_pin: PC2
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 355
position_max: 355

##--------------------------------------------------------------------
homing_speed: 80  #Max 100
homing_retract_dist: 10
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_y]
cs_pin: PE11
spi_bus: spi4
diag0_pin: ^!PE10
#diag0_pin: ^!PC2
interpolate: false
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive
run_current: 1.8
home_current: 0.5
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to STEPPER 0
##  Endstop connected to Z-ENDSTOP
[stepper_z]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD7
rotation_distance: 40
gear_ratio: 80:16  
microsteps: 32
endstop_pin: probe:z_virtual_endstop # uses cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 230

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
position_max: 330

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
#second_homing_speed: 3
#homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z]
uart_pin: PD5
#diag_pin: ^!PD6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to STEPPER 1
[stepper_z1]
step_pin: PC12
dir_pin: PC11
enable_pin: !PD2
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z1]
uart_pin: PD0
#diag_pin: ^!PD1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to STEPPER 2
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PC10
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z2]
uart_pin: PA8
#diag_pin: ^!PA15
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to STEPPER 3
[stepper_z3]
step_pin: PG7
dir_pin: PG6
enable_pin: !PC7
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z3]
uart_pin: PG8
#diag_pin: ^!PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##  Connected to STEPPER 0
##  Heater - HEATER
##  Thermistor - TH0
[extruder]
#step_pin: PD10
#dir_pin: PD9
#enable_pin: !PD13
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:17               #BMG Gear Ratio
#microsteps: 32
#full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#heater_pin: PG10
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type:
#sensor_pin: PA1 #TH0
#pullup_resistor: 2200
#min_temp: 10
#max_temp: 270
#max_power: 1.0
#min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Connected to STEPPER 4
#[tmc2209 extruder]
#uart_pin: PD11
#interpolate: false
#run_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HEATBED
##  Thermistor - TH1
heater_pin: PG11
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA1
pullup_resistor: 2200
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.9
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

#[probe]
##  Inductive Probe
##  Connected to Z-PROBE
##  This probe is not used for Z height, only Quad Gantry Leveling
#pin: ^PF1
#pin: SB2040:gpio28
#x_offset: 0
#y_offset: 0
##z_offset: 0
#speed: 10.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 5
#activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}

#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
#       # Temperature target is already low enough, but nozzle may still be too hot.
#       {% if ACTUAL_TEMP > MAX_TEMP %}
#           { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#           TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#       {% endif %}
#   {% endif %}





#####################################################################
#   Fan Control
#####################################################################

#[fan]
##  Print Cooling Fan - FAN0
#pin: PB7
##tachometer_pin: PB0
#kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
#off_below: 0.10

#[heater_fan hotend_fan]
##  Hotend Fan - FAN1
#pin: PB3
##tachometer_pin: PB4
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

#[controller_fan controller_fan]
##  Controller fan - FAN2
#pin: PF7
##tachometer_pin: PF6
#kick_start_time: 0.5
#heater: heater_bed

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PB3
##tachometer_pin: PF8
#max_power: 1.0
#shutdown_speed: 0.0
##kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   Filament sensor
#####################################################################

#[filament_switch_sensor Filament]
#pause_on_runout: True
#runout_gcode: M600
#insert_gcode:
#event_delay: 3.0
#pause_delay: 0.5
#switch_pin: !PC0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting (Optional)
## Connected to LED-STRIP
#[output_pin caselight]
#pin: PF10
#pwm:true
#hardware_pwm: False
#value: 0.20 #startup value
#shutdown_value: 0
#value:1
#cycle_time: 0.00025

## Neopixel (Optional)
## Connected to NEOPIXEL
[neopixel rgb_light]
pin: PC0
chain_count: 18
color_order: BGR
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600

#[safe_z_home]
###  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:165,180
#speed:100
#z_hop:10

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
#speed: 100
#horizontal_move_z: 10
#retries: 5
#retry_tolerance: 0.0075
max_adjust: 10



##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

[gcode_arcs]

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[force_move]
enable_force_move: true

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

  [gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

  
########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG9, EXP1_2=PG12,
    EXP1_3=PG13, EXP1_4=PG14,
    EXP1_5=PC13, EXP1_6=PC14,    # Slot in the socket on this side
    EXP1_7=PC15, EXP1_8=PF0,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PE2, EXP2_4=PE4,
    EXP2_5=PE3, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PE5, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PE4

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##  mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    Beacon_QGL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##  Uncomment for 250mm build
    #G0 X125 Y125 Z30 F3600
    
    ##  Uncomment for 300 build
    #G0 X150 Y150 Z30 F3600
    
    ##  Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32
   
#[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#gcode:
#    G32                            ; home all axes
#    G90                            ; absolute positioning
#    G1 Z20 F3000                   ; move nozzle away from bed
   
#[gcode_macro PRINT_START]
#description: perform calibration and get ready to print
#variable_parameter_EXTRUDER_TEMP : 260
#variable_parameter_BED_TEMP : 110
#variable_parameter_PRINT_START_X : 175
#variable_parameter_PRINT_START_Y : 175
#variable_parameter_PRINT_END_X : 0
#variable_parameter_PRINT_END_Y : 350
#gcode:
#    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(260)|float %}
#    {% set BED_TEMP = params.BED_TEMP|default(110)|float %}
#    # TODO: get this value from the Probe x_offset (x_offset + 2x mesh padding + 1)
#    {% set safe_max_x = 300 - 54 %}
#    {% set start_x = params.PRINT_START_X|default(0)|float %}
#    {% set start_y = params.PRINT_START_Y|default(0)|float %}
#    {% set end_x = params.PRINT_END_X|default(300.0)|float %}
#    {% set end_y = params.PRINT_END_Y|default(300.0)|float %}
#    # Enlarge the start area as needed to contain the purge line:
#    {% set start_x = [start_x, safe_max_x]|min %}
#    {% set end_x   = [end_x, safe_max_x]|min %}
#    {% set start_y = start_y - 5 %}

#    CLEAR_PAUSE
#    #SHOW_BUILD_SHEET

    #######
    # This section is a duplicate of what happens in the warmup to guard against old prints that only call PRINT_START
    # generally the printer will pass through this almost instantly
 #   M104 S{EXTRUDER_TEMP * 0.75}        ; set extruder temperature to 75%
 #   M140 S{BED_TEMP}                    ; set bed temprature
 #   M106 S25                            ; Enable the part cooling fan to keep the probe and cooling ducts cool during heat-up
 #   {% if not 'xyz' in printer.toolhead.homed_axes %}
 #       G32                             ; home all axes if not homed
 #   {% endif %}
    # wait for bed to reach temperature
#    STATUS_HEATING
 #   M190 S{BED_TEMP}
    #######
 #   G90
 #  #QUAD_GANTRY_LEVEL
 #   carto_qgl
#    # mesh bed level
 #   STATUS_MESHING
 #   BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    # the rest of your start macro here
 #   BED_MESH_CLEAR
    #PRINT_AREA_BED_MESH_CALIBRATE
    # calibrate Klicky probe Z
    #status_calibrating_z
    #CALIBRATE_Z
    #APPLY_BUILD_SHEET_ADJUSTMENT
    ; move to the front of the printer to allow user to remove any oozing
#    SAFE_LIFT_Z Z=25 F=3000
#    PARK_FRONT                          ; Move tool head to front to facilitate ooze cleanup
#    STATUS_HEATING
#    M109 S{EXTRUDER_TEMP}               ; Wait for nozzle to finish heating
#    #PRIME_LINE
#    M106 S0                             ; Done waiting, part cooling off and back to slicer control
    #SET_FRAME_COMP ENABLE=1
    #SHOW_BUILD_SHEET
#    STATUS_PRINTING
    #PURGE_LINE PRINT_START_X={start_x} PRINT_START_Y={start_y}
    ; if a callback was supplied to print_start, call it
#    {% set print_start_macro = printer['gcode_macro PRINT_START'] %}
#    {% if print_start_macro.callback  %}
#        {print_start_macro.callback}
 #   {% endif %}

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one



[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[exclude_object]

[firmware_retraction]
retract_length: 0.75
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 40
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 20
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[include moonraker_obico_macros.cfg]
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 53.001
#*# pid_ki = 2.598
#*# pid_kd = 270.305
#*#
#*# [beacon model default]
#*# model_coef = 1.4542165375878884,
#*# 	  1.7694971832227278,
#*# 	  0.7518452572090265,
#*# 	  0.31313178301927735,
#*# 	  0.29363466973695845,
#*# 	  0.43973838588262265,
#*# 	  0.026733972281103944,
#*# 	  -0.25592990867900123,
#*# 	  0.07353304504315193,
#*# 	  0.13654466900268583
#*# model_domain = 1.8043615279973482e-07,1.9274018638409975e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 58.880359
#*# model_offset = 0.00000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.008301, -0.012021, -0.013703, -0.013611, -0.020005
#*# 	  -0.008269, -0.010736, -0.015070, -0.017874, -0.022323
#*# 	  -0.006224, -0.006421, -0.009104, -0.015281, -0.024645
#*# 	  -0.002446, -0.002947, -0.004008, -0.008472, -0.017104
#*# 	  -0.009700, -0.011281, -0.011761, -0.014059, -0.022596
#*# 	  -0.014890, -0.021577, -0.024901, -0.025642, -0.030098
#*# x_count = 5
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 158.0
#*# max_x = 192.0
#*# min_y = 152.5
#*# max_y = 197.5
